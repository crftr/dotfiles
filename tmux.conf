unbind C-b
set -g prefix C-s
bind -r C-s send-prefix

# Easy config reload
bind R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

set  -g default-shell $SHELL
set  -g default-command "reattach-to-user-namespace -l ${SHELL}"
setw -g mode-keys vi

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind C-t choose-tree
bind b   break-pane -d

# Better splits with \ and -
bind \ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Windows
bind c new-window -c "#{pane_current_path}"

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

# Mouse scrolling and draggable pane resizing
set -g mouse on

# Keep plenty of history for scrollback
set -g history-limit 10000

# Appearance
set -g default-terminal "screen-256color"
set -g status-left-length   20
set -g status-right-length 100

set -g status-bg colour234
set -g status-fg white
set -g message-bg colour234
set -g message-fg white

setw -g window-status-bg default
setw -g window-status-fg white
setw -g window-status-current-bg colour234
setw -g window-status-current-fg colour148

# Right side of status bar
#   $(echo $USER) - shows the current username
#   #H - shows the hostname of your computer
#   %h %d %Y - date in the [Mon DD YYYY] format
#   %l:%M %p - time in the [HH:MM AM/PM] format
set -g status-right '#(battery -t) #[fg=colour148][#[fg=white]#(echo $USER)@#H#[fg=colour148]] [#[fg=white]%h %d %Y â¡‡ #[bg=fg=white,bold]%-I:%M %p#[default]#[fg=colour148]]'

# Setup 'v' to begin selection as in Vim
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
